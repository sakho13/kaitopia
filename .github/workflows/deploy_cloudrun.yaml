name: Deploy to Cloud Run (Manual)

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: "„É™„É™„Éº„Çπ„Çø„Ç∞"
        required: true
        type: string
      deployMaintenance:
        description: "„É°„É≥„ÉÜ„Éä„É≥„ÇπÁîªÈù¢„ÇíÂêåÊôÇ„Å´„Éá„Éó„É≠„Ç§„Åô„Çã„Åã"
        required: false
        type: boolean
      maintenanceMessage:
        description: "„É°„É≥„ÉÜ„Éä„É≥„ÇπÁîªÈù¢„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏"
        required: false
        type: string
      deployMode:
        description: "„Éá„Éó„É≠„Ç§„É¢„Éº„Éâ"
        required: false
        default: development
        type: choice
        options:
          - development
          - maintenance
          - production

concurrency:
  group: ${{ github.event.inputs.releaseTag }}
  cancel-in-progress: true

jobs:
  validate-release-tag:
    name: üîç Validate releaseTag format
    runs-on: ubuntu-latest
    steps:
      - name: Check allowed tag pattern
        run: |
          TAG="${{ github.event.inputs.releaseTag }}"
          if [[ ! "$TAG" =~ ^[abv][0-9]+-[0-9]+-[0-9]+$ ]]; then
            echo "::error ::releaseTag must start with a, b or v and follow X.Y.Z (e.g. a0-0-1), but got '$TAG'"
            exit 1
          fi

  push-image:
    name: üöÄ Build & Push Images
    needs: validate-release-tag
    runs-on: ubuntu-latest
    environment: production

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: asia-northeast1
      IMAGE_URI_MAIN: gcr.io/${{ secrets.GCP_PROJECT_ID }}/kaitopia:${{ github.sha }}
      IMAGE_URI_MAINTENANCE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/kaitopia-maintenance:${{ github.sha }}

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - name: main
            imageVar: IMAGE_URI_MAIN
            tag: ${{ github.event.inputs.releaseTag }}
            enabled: true
          - name: maintenance
            imageVar: IMAGE_URI_MAINTENANCE
            tag: maintenance
            enabled: ${{ github.event.inputs.deployMaintenance == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker --quiet

      - name: Create ${{ matrix.name }} env file
        if: ${{ matrix.enabled }}
        run: |
          cat <<EOF > .env
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
          EOF

          # maintenance „ÅÆ„Å®„Åç„Å†„Åë„É°„ÉÉ„Çª„Éº„Ç∏Ë°å„ÇíËøΩÂä†
          if [ "${{ matrix.name }}" = "maintenance" ]; then
            cat <<EOF >> .env
          NEXT_PUBLIC_MAINTENANCE_MODE=true
          NEXT_PUBLIC_MAINTENANCE_MODE_MESSAGE=${{ github.event.inputs.maintenanceMessage }}
          EOF
          fi

      - name: Determine image URI
        if: ${{ matrix.enabled }}
        run: |
          # matrix.imageVar „ÅØ "IMAGE_URI_MAIN" „Åã "IMAGE_URI_MAINTENANCE"
          IMG_VAR=$(echo "${{ matrix.imageVar }}")
          IMAGE=${!IMG_VAR}
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: üî® Build & Push ${{ matrix.name }} image
        if: ${{ matrix.enabled }}
        run: |
          docker build -t $IMAGE -f Dockerfile .
          docker push $IMAGE

      - name: üö¢ Deploy ${{ matrix.name }} to Cloud Run (no traffic)
        if: ${{ matrix.enabled }}
        run: |
          gcloud run deploy kaitopia \
            --image $IMAGE \
            --tag=${{ matrix.tag }} \
            --region $GCP_REGION \
            --allow-unauthenticated \
            --no-traffic \
            --service-account=cloud-run-exec@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars \
            "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}, \
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}, \
            NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}, \
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}, \
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}, \
            NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}, \
            NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}" \
            --set-secrets="DATABASE_URL=prod-database-url:latest,NEXT_PRIVATE_FIREBASE_CLIENT_EMAIL=firebase-client-email:latest,NEXT_PRIVATE_FIREBASE_PRIVATE_KEY=firebase-private-key:latest"

  switch-traffic:
    name: üîÄ Switch traffic according to deployMode
    needs: push-image
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deployMode != 'development' }}

    steps:
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Switch traffic
        run: |
          MODE="${{ github.event.inputs.deployMode }}"
          if [ "$MODE" = "maintenance" ]; then
            gcloud run services update-traffic kaitopia \
              --to-tags maintenance=100 \
              --region $GCP_REGION \
              --platform managed
          else
            TAG="${{ github.event.inputs.releaseTag }}"
            gcloud run services update-traffic kaitopia \
              --to-tags ${TAG}=100 \
              --region $GCP_REGION \
              --platform managed
          fi
