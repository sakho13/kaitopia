openapi: "3.0.3"
info:
  title: "Kaitopia API V1"
  description: "Kaitopia API V1 Documentation"
  version: "0.0.1"

servers:
  - url: "https://localhost:3000/api"
    description: "Local server"

tags:
  - name: "CommonAPI"
    description: "Common API endpoints"
  - name: "UserAPI"
    description: "User API endpoints"
  - name: "ManageAPI"
    description: "Manage API endpoints"

paths:
  /common/v1/recommend-exercise:
    get:
      tags:
        - "CommonAPI"
      summary: 開発者おすすめの問題集を取得する
      description: ユーザ個人のおすすめの問題集を取得するAPIとは別
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRecommendExerciseResponse"

  /user/v1/exercise/start:
    get:
      summary: "問題集の回答を始める"
      description: "問題集の回答を始めるAPI"
      tags:
        - "UserAPI"
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - name: "exerciseId"
          in: "query"
          required: true
          description: "問題集ID"
          schema:
            type: string
            example: "exercise_1"
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  answerLogSheetId:
                    type: string
                    example: "answer_log_sheet_1"
                    description: "あらゆる回答の履歴に対応するID"
                  isInProgress:
                    type: boolean
                    example: true
                    description: "問題集の回答が進行中かどうかを示すフラグ"

  /user/v1/exercise/answer:
    post:
      summary: "問題集の回答を提出する"
      description: "問題集の回答を提出するAPI"
      tags:
        - "UserAPI"
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  answerLogSheetId:
                    type: string
                    example: "answer_log_sheet_1"
                    description: "あらゆる回答の履歴に対応するID"

  /manage/v1/exercise:
    get:
      summary: "問題集一覧を取得する(管理用)"
      description: "問題集一覧を取得するAPI(管理用)"
      tags:
        - "ManageAPI"
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetManageExerciseResponse"

  /health:
    get:
      summary: "Health check"
      description: "Check if the server is running"
      responses:
        "200":
          description: "Server is running"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Hello!"

components:
  schemas:
    GetRecommendExerciseResponse:
      type: object
      properties:
        recommendExercises:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "exercise_1"
              title:
                type: string
                example: "プログラミング入門問題集1"
              description:
                type: string
                example: "この問題集はプログラミングの基礎を学ぶためのサンプルです。"

    GetManageExerciseResponse:
      type: object
      properties:
        exercises:
          type: array
          items:
            type: object
            properties:
              exerciseId:
                type: string
                example: "exercise_1"
              title:
                type: string
                example: "プログラミング入門問題集1"
              description:
                type: string
                example: "この問題集はプログラミングの基礎を学ぶためのサンプルです。"
              createdAt:
                type: string
                format: date-time
                example: "2023-10-01T12:00:00Z"
              updatedAt:
                type: string
                format: date-time
                example: "2023-10-01T12:00:00Z"

  parameters:
    AuthorizationHeader:
      name: "Authorization"
      in: "header"
      required: true
      description: "Bearer token for authentication"
      schema:
        type: string
        description: "Bearer token"
